[property]
enable=1
target-unique-ids=1

process-on-frame=1

# if enabled maintain the aspect ratio while scaling
maintain-aspect-ratio=1

# if enabled pad symmetrically with maintain-aspect-ratio enabled
symmetric-padding=1

# processing width/height at which image scaled
processing-width=100
processing-height=32

scaling-buf-pool-size=6
tensor-buf-pool-size=6

# 0=NCHW, 1=NHWC, 2=CUSTOM
network-input-order=0

# tensor shape based on network-input-order
network-input-shape=1;1;32;100

# 0=RGB, 1=BGR, 2=GRAY
network-color-format=2

# 0=FP32, 1=UINT8, 2=INT8, 3=UINT32, 4=INT32, 5=FP16
tensor-data-type=0


tensor-name=input


# 0=NVBUF_MEM_DEFAULT 1=NVBUF_MEM_CUDA_PINNED 2=NVBUF_MEM_CUDA_DEVICE 3=NVBUF_MEM_CUDA_UNIFIED
scaling-pool-memory-type=0

# 0=NvBufSurfTransformCompute_Default 1=NvBufSurfTransformCompute_GPU 2=NvBufSurfTransformCompute_VIC
scaling-pool-compute-hw=0

# Scaling Interpolation method
# 0=NvBufSurfTransformInter_Nearest 1=NvBufSurfTransformInter_Bilinear 2=NvBufSurfTransformInter_Algo1
# 3=NvBufSurfTransformInter_Algo2 4=NvBufSurfTransformInter_Algo3 5=NvBufSurfTransformInter_Algo4
# 6=NvBufSurfTransformInter_Default
scaling-filter=0

custom-lib-path=/opt/nvidia/deepstream/deepstream/lib/gst-plugins/libcustom2d_preprocess.so
custom-tensor-preparation-function=CustomTensorPreparation


output-tensor-meta=1

[user-configs]
pixel-normalization-factor=0.00784313
#mean-file=
offsets=127.5

[group-0]
src-ids=0;1
custom-input-transformation-function=CustomAsyncTransformation
process-on-roi=1
roi-params-src-0=85;121;235;61
roi-params-src-1=85;121;235;61
draw-roi=1
roi-color=1;1;1;1